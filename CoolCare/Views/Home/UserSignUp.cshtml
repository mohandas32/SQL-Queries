@model CoolCare.Models.User

@{
    ViewBag.Title = "UserSignUp";
    Layout = "~/Views/Shared/FormLayout.cshtml";

}
@{
    Html.RenderPartial("~/Views/Shared/HeaderPartialView.cshtml");
}


@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/jquery")


<link href="~/Content/CoolCare/css/UserSignUp.css" rel="stylesheet" />
@if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
{
    if (ViewBag.Message != null)
    {
        <div class="alert alert-success">
            <strong>Success!</strong>@ViewBag.Message
        </div>
    }
}
else
{
<div class="container">
    @using (Html.BeginForm(new { @class = "formUserSignUp" }))
    {
        @Html.AntiForgeryToken()
        <div class="row needs-validation form-horizontal ">
            @if (ViewBag.errormsg != null)
            {
                <h2 align="center" class="text-white">@ViewBag.erroemsg</h2>

            }
            <h1 class="text-white" align="center">Sign Up</h1>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="col-md-5">
                <div class="form-group">
                    <label for="FirstName" class="form-label">FirstName</label>
                    @*@Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    <label for="LastName" class="form-label">LastName</label>

                    @*@Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-12">
                <div class="form-group">
                    <label for="Address" class="form-label">Address</label>

                    @*@Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-3">
                <div class="form-group">
                    <label for="City" class="form-label">City</label>

                    @*@Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    <label for="State" class="form-label">State</label>

                    @*@Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    <label for="Zip" class="form-label">Zip</label>
                    @*@Html.LabelFor(model => model.Zip, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    @Html.EditorFor(model => model.Pincode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Pincode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-5">
                <div class="form-group">
                    <label for="MobileNo" class="form-label">MobileNo</label>

                    @*@Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    @Html.EditorFor(model => model.MobileNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    <label for="Email" class="form-label">Email</label>

                    @*@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-5">
                <div class="form-group">
                    <label for="Password" class="form-label">Password</label>

                    @*@Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    <label for="ConfirmPassword" class="form-label">Confirm Password</label>

                    @*@Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    @Html.EditorFor(model => model.CnfPassword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CnfPassword, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-12 text-center mt-5">
                <button class="btn btn-primary px-3 py-2 submitButton mt-3" @*onclick="validation()"*@ type="submit">
                    Submit
                    form
                </button>
            </div>
            <div class="text-center mt-4">
                <p><small class="text-white mr-2">If you have Existing Account ?</small> <a href="/Home/UserLogin" class="text-white font-weight-bold">Login Here</a></p>
            </div>
        </div>
    }

   
</div>


}
    @{
        Html.RenderPartial("~/Views/Shared/FooterPartialView.cshtml");
    }

